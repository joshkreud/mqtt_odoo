[tool.poetry]
name = "odoo_mqtt"
version = "0.0.1"
description = "Tool to listen to MQTT and transmit data to a Database"
authors = ["Joshua Kreuder <joshua_kreuder@outlook.de>"]
license = "MIT"
readme = "README.md"


[tool.poetry.scripts]
mqtt_odoo_proxy = "mqtt_odoo_proxy:launch_cli"

[tool.poetry.dependencies]
python = "^3.10,<3.12"
rich = "^12.6.0"
paho-mqtt = "^1.6.1"
python-dotenv = "^0.21.0"
fastapi = "^0.101.0"
typer-common-functions = "^0.0.5"
uvicorn = "^0.23.2"
requests = "^2.31.0"


[tool.poetry.group.dev.dependencies]
pylint = "^2.15.6"
flake8 = "^6.0.0"
black = "^22.10.0"
isort = "^5.10.1"
pre-commit = "^3.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
use_parentheses = true
line_length = 120
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
default_section = "THIRDPARTY"
ensure_newline_before_comments = true

[tool.pylint.main]
load-plugins = "pylint.extensions.docparams,pylint.extensions.docstyle,pylint.extensions.bad_builtin,pylint.extensions.check_elif,pylint.extensions.mccabe"

[tool.pylint.master]
jobs = 0
persistent = true
init-hook = 'import sys; sys.path.append("src")'
ignore-paths = "alembic"

[tool.pylint.'MESSAGES CONTROL']
disable = "superfluous-parens,too-few-public-methods,too-many-arguments,too-many-instance-attributes,too-many-locals,fixme"

[tool.pylint.format]
max-line-length = 120
ignore-long-lines = '^\s*(# )?<?https?://\S+>?$'

[tool.pylint.reports]
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"
output-format = "colorized"
reports = "no"
